import tkinter as tk
from tkinter import ttk, messagebox

def submit_address():
    """
    Retrieves the entered address details from the simplified entry fields,
    formats them, and displays them in the result_text widget.
    Shows a success message box upon valid submission.
    """
    # Get values from entry widgets
    name = name_entry.get().strip()
    street = street_entry.get().strip()
    city = city_entry.get().strip()
    zip_code = zip_entry.get().strip()

    # Basic validation: Check if essential fields are not empty
    if not all([name, street, city, zip_code]):
        messagebox.showerror("Input Error", "Please fill in all required fields.")
        return

    # Format the address for display
    address_display = (
        f"Name: {name}\n"
        f"Street: {street}\n"
        f"City: {city}\n"
        f"Zip/Postal Code: {zip_code}"
    )

    # Clear previous text in the result_text widget and insert new address
    result_text.delete(1.0, tk.END)
    result_text.insert(tk.END, address_display)

    messagebox.showinfo("Submission Successful", "Address details submitted!")

def clear_fields():
    """
    Clears the content of all entry widgets and the result_text area.
    """
    name_entry.delete(0, tk.END)
    street_entry.delete(0, tk.END)
    city_entry.delete(0, tk.END)
    zip_entry.delete(0, tk.END)
    result_text.delete(1.0, tk.END)
    messagebox.showinfo("Fields Cleared", "All fields have been cleared.")


# --- Main Application Window Setup ---
root = tk.Tk()
root.title("Simple Address Entry Form")
root.geometry("500x450") # Adjust default window size for fewer fields
root.resizable(True, True) # Allow window resizing

# Configure column and row weights for responsive layout
root.grid_columnconfigure(0, weight=1)
root.grid_columnconfigure(1, weight=3) # Entry fields get more width
root.grid_rowconfigure(4, weight=1) # Row for the text area

# --- Create Input Frame ---
input_frame = ttk.Frame(root, padding="20")
input_frame.grid(row=0, column=0, columnspan=2, sticky="nsew")
input_frame.columnconfigure(0, weight=1)
input_frame.columnconfigure(1, weight=3)

# Create labels and entry fields directly for simplicity
# Name
name_label = ttk.Label(input_frame, text="Name:", font=("Inter", 10))
name_label.grid(row=0, column=0, sticky="w", pady=5)
name_entry = ttk.Entry(input_frame, width=40, font=("Inter", 10))
name_entry.grid(row=0, column=1, sticky="ew", pady=5)

# Street Address
street_label = ttk.Label(input_frame, text="Street Address:", font=("Inter", 10))
street_label.grid(row=1, column=0, sticky="w", pady=5)
street_entry = ttk.Entry(input_frame, width=40, font=("Inter", 10))
street_entry.grid(row=1, column=1, sticky="ew", pady=5)

# City
city_label = ttk.Label(input_frame, text="City:", font=("Inter", 10))
city_label.grid(row=2, column=0, sticky="w", pady=5)
city_entry = ttk.Entry(input_frame, width=40, font=("Inter", 10))
city_entry.grid(row=2, column=1, sticky="ew", pady=5)

# Zip/Postal Code
zip_label = ttk.Label(input_frame, text="Zip/Postal Code:", font=("Inter", 10))
zip_label.grid(row=3, column=0, sticky="w", pady=5)
zip_entry = ttk.Entry(input_frame, width=40, font=("Inter", 10))
zip_entry.grid(row=3, column=1, sticky="ew", pady=5)


# --- Create Buttons Frame ---
button_frame = ttk.Frame(root, padding="10")
button_frame.grid(row=1, column=0, columnspan=2, sticky="ew")
button_frame.columnconfigure(0, weight=1)
button_frame.columnconfigure(1, weight=1)

submit_button = ttk.Button(button_frame, text="Submit Address", command=submit_address)
submit_button.grid(row=0, column=0, padx=10, pady=10, sticky="ew")

clear_button = ttk.Button(button_frame, text="Clear Fields", command=clear_fields)
clear_button.grid(row=0, column=1, padx=10, pady=10, sticky="ew")

# --- Create Result Display Area ---
result_label = ttk.Label(root, text="Entered Address:", font=("Inter", 12, "bold"))
result_label.grid(row=2, column=0, columnspan=2, sticky="w", padx=20, pady=10)

result_text = tk.Text(root, height=8, width=40, wrap=tk.WORD, font=("Inter", 10), state="normal", relief="sunken")
result_text.grid(row=3, column=0, columnspan=2, sticky="nsew", padx=20, pady=5)

# Add a scrollbar to the text widget
scrollbar = ttk.Scrollbar(root, orient=tk.VERTICAL, command=result_text.yview)
scrollbar.grid(row=3, column=2, sticky="ns")
result_text.config(yscrollcommand=scrollbar.set)

# Start the Tkinter event loop
root.mainloop()
